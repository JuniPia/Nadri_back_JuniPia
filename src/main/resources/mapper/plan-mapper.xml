<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="kr.co.iei.plan.model.dao.PlanDao">

	<select id="selectNearby" resultType="place">
		SELECT
			*
		FROM (
			SELECT
			    p.place_id, p.place_thumb, p.place_title, p.place_type_id, p.place_addr, p.map_lat, p.map_lng,
			    NVL(r.avg_rate, 0) as place_rating, NVL(r.review_count, 0) AS place_review,
			    6371000 * ACOS(
			        COS(#{lat} * 3.141592 / 180) * COS(p.map_lat * 3.141592 / 180) *
			        COS((p.map_lng - #{lng}) * 3.141592 / 180) +
			        SIN(#{lat} * 3.141592 / 180) * SIN(p.map_lat * 3.141592 / 180)
				) AS distance
			FROM
			    place_info p
			LEFT JOIN (
			    SELECT
			        place_id, AVG(star_rate) as avg_rate, COUNT(review_no) AS review_count
			    FROM
			        review
			    GROUP BY
			        place_id
			) r ON p.place_id = r.place_id
		) inner
		WHERE distance <![CDATA[<=]]> #{radius}
		ORDER BY distance ASC
	</select>
	
<!-- 
	<select id="verifyPlan" resultType="group">
		SELECT pg.*
		FROM plan_group pg
		JOIN member m ON pg.member_nickname = m.member_nickname
		WHERE m.member_email = #{memberEmail} AND pg.plan_no = #{planNo}
	</select>
 -->

	<select id="verifyPlan" resultType="plan">
		SELECT tp.*
		FROM trip_plan tp
		JOIN member m ON tp.member_nickname = m.member_nickname
		WHERE tp.plan_no = #{planNo}
			AND (
				tp.plan_status = 1
				OR
				m.member_email = #{memberEmail}
			)
	</select>
	
	<select id="selectPlanItinerariesWithPlace" resultType="itineraryWithPlace">
		SELECT 
			i.itinerary_date,
			i.transport,
			i.itinerary_order,
	
			p.place_id,
			p.place_title,
			p.place_addr,
			p.place_type_id,
			p.map_lat,
			p.map_lng,
			p.place_thumb,
	
			NVL(r.avg_rate, 0) AS place_rating,
			NVL(r.review_count, 0) AS place_review
	
		FROM trip_itinerary i
		JOIN place_info p ON i.end_location = p.place_id
		LEFT JOIN (
			SELECT 
				place_id, 
				AVG(star_rate) AS avg_rate, 
				COUNT(review_no) AS review_count
			FROM review
			GROUP BY place_id
		) r ON p.place_id = r.place_id
	
		WHERE i.plan_no = #{planNo}
		ORDER BY i.itinerary_order
	</select>
	
	<select id="isPlanOwner" resultType="int">
		SELECT COUNT(*)
		FROM plan_group pg
		JOIN member m On pg.member_nickname = m.member_nickname
		WHERE
			pg.plan_no = #{planNo}
		FROM trip_plan tp
		JOIN member m On tp.member_nickname = m.member_nickname
		WHERE
			tp.plan_no = #{planNo}
			AND
			m.member_email = #{memberEmail}
	</select>
	
	<insert id="insertTripPlan">
		INSERT INTO trip_plan
		VALUES (
			#{planNo},
			#{planName},
			#{startDate},
			#{endDate},
			#{planThumb},
			#{planStatus},
			#{memberNickname}
		)
		<selectKey order="BEFORE" resultType="int" keyProperty="planNo">
			select trip_plan_seq.nextval from dual
		</selectKey>
	</insert>
	
	<select id="currentPlanNo" resultType="int">
		SELECT trip_plan_seq.currval FROM dual
	</select>
	
	<insert id="insertTripItinerary">
		INSERT INTO trip_itinerary
		VALUES (
			trip_itinerary_seq.nextval,
			#{planNo},
			#{itineraryDate},
			<choose>
				<when test="startLocation != 0">
					#{startLocation},
				</when>
				<when test="startLocation == 0">
					null,
				</when>
			</choose>
			#{transport},
			#{endLocation},
			#{itineraryOrder}
		)
	</insert>
	
	<select id="selectPlanStats" resultType="stats">
		select count(*) planCount
		from trip_plan	
	</select>
	
	<select id="selectMostPlace" resultType="stats">
		select * from 
    		(select p.*, rownum rnum from 
        		(select plan_no, count(plan_no) count from trip_itinerary group by plan_no)p 
    		order by count desc)
		where rnum>5 ;
	</select>
	
	<select id="selectOnePlan" resultType="plan">
		SELECT * FROM trip_plan WHERE plan_no = #{planNo}
	</select>
	
	<update id="updatePlan">
		UPDATE trip_plan
	    SET plan_name = #{planName},
	        start_date = #{startDate},
	        end_date = #{endDate},
	        plan_thumb = #{planThumb},
	        plan_status = #{planStatus}
	    WHERE plan_no = #{planNo}
	</update>
	
	<delete id="deleteItineraries">
		DELETE FROM trip_itinerary
		WHERE plan_no = #{planNo}
	</delete>
	
</mapper>
