<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="kr.co.iei.admin.model.dao.AdminDao">
	<!-- 이벤트 -->
  	<select id="selectOnGoingEvent" resultType="event">
		select * from event 
		where to_date(#{date}, 'YYYY-MM-DD') 
			between to_date(start_date, 'YYYY-MM-DD') 
			and  to_date(end_date, 'YYYY-MM-DD')
	</select>
	<select id="selectMonthEvent" resultType="event">
		SELECT * FROM event
		WHERE
		  TO_DATE(start_date, 'YYYY-MM-DD')  &lt;= LAST_DAY(TO_DATE(#{month}, 'YYYY-MM')) AND
		  TO_DATE(end_date, 'YYYY-MM-DD') &gt;= TO_DATE(#{month}, 'YYYY-MM')
	</select>
  	<insert id="insertEvent">
  		insert into event values(event_seq.nextval,#{placeTypeId},#{eventTitle},#{eventContent},#{startDate},#{endDate},#{eventImg})
  	</insert>
  	<select id="selectDelFile" resultType="String">
  		select event_img from event where event_no=#{eventNo}
  	</select>
  	<update id="updateEvent">
  		update event set event_title=#{eventTitle}, place_type_id=#{placeTypeId},event_content=#{eventContent},start_date=#{startDate},end_date=#{endDate}
  		<if test="eventImg != null">
			,event_img=#{eventImg}
		</if>
		where event_no=#{eventNo}
  	</update>
  	<select id="selectEndEvent" resultType="event">
  		select * from event 
		where to_date(#{date}, 'YYYY-MM-DD') &gt; to_date(end_date,'YYYY-MM-DD')
  	</select>
  	<delete id="deleteEvent" >
  		delete from event where event_no=#{eventNo}
  	</delete>
  	<!-- 회사 정보 -->
  	<select id="selectCompanyInfo" resultType="company">
  		select * from company_info
  	</select>
  	<update id="updateCompanyInfo">
  		update company_info set
  			addr=#{addr}, tel=#{tel}, fax=#{fax}, email=#{email}
  	</update>
  	<select id="selectKeywordInfo" resultType="keyword">
  		select * from search_keyword where keyword=#{keyword}
  	</select>
  	<update id="upsertKeywordInfo">
		MERGE INTO search_keyword k
		  USING (SELECT #{keyword} AS keyword FROM dual) src
		  ON (k.keyword = src.keyword)
		  WHEN MATCHED THEN
		    UPDATE SET
		      place_type = #{type},
		      cat1 = #{cat1},
		      cat2 = #{cat2},
		      cat3 = #{cat3},
		      place_id = #{placeId},
		      area_code = #{area}
		  WHEN NOT MATCHED THEN
		    INSERT (
		      keyword_no,
		      keyword,
		      place_type,
		      cat1,
		      cat2,
		      cat3,
		      hit_count,
		      place_id,
		      area_code
		    )
		    VALUES (
		      keyword_seq.nextval,
		      #{keyword},
		      #{type},
		      #{cat1},
		      #{cat2},
		      #{cat3},
		      0,
		      #{placeId},
		      #{area}
		    )
	</update>
	<update id="updateReport">
		update report set report_status=#{reportStatus} 
		where review_no=#{reviewNo} and report_nickname=#{reportNickname}
	</update>
	<update id="updateWarning">
		update member set warning_stack = WARNING_STACK+1 where member_nickname=#{memberNickname}
	</update>
</mapper>
